#!/bin/bash

#  PrestoPRIME  LTFSArchiver
#  Version: 1.0 Beta
#  Authors: L. Savio, L. Boch, R. Borgotallo
#
#  Copyritght (C) 2011-2012 RAI â€“ Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

. $CFGFILE
. `dirname $0`/common.sh

#------------------------------------
function cercatape
{
trovato=`$CMD_DB" select count (*) from lto_info where label='$ltolabel';" | sed -e 's/^ *//'`
}
#------------------------------------
function cercainpool
{
if [ -z $poolname ]; then
	gianelpool=1
	poolname=`$CMD_DB" select poolname from lto_info where label='$ltolabel'" | sed -e 's/^ *//'`
else
	gianelpool=`$CMD_DB" select count (*) from lto_info where label='$ltolabel' AND poolname='$poolname';" | sed -e 's/^ *//'`
fi
}
#------------------------------------
function none
{
	result="false"
}
#------------------------------------

function Add
{
#	Passo 1	- Essiste gia'?
cercatape $ltolabel
#	Se non esiste...  Passo 2 - insert nelle tabelle
if [ $trovato == 0 ]; then
	$CMD_DB" insert into lto_info (label,free,booked,poolname) VALUES ('$ltolabel',0,0,'$poolname')" >/dev/null 2>&1
	case $format in
		"Y")
			#	Se e' da formattare inserisco la richiesta di formattazione
			ACTION="F"
		;;
		"F")
			#	Se e' da formattare CON FORCE inserisco la richiesta di formattazione FORZATA
			ACTION="Z"
		;;
		*)
			#	Se non e' da formattare inserisco la richiesta di ceckspace 
			ACTION="C"
		;;
	esac
	taskid=`uuidgen`
	$CMD_DB" insert into requests (callingtime,uuid,ltotape,operation,manager,status,substatus,sourcefile) \
		VALUES('$callingtime','$taskid','$ltolabel','$ACTION','$LTFSARCHIVER_MODE','wait',0,'none')" >/dev/null 2>&1
	#	insert 1: metto label su lto_info
	RC1=$?
	if [ $RC1 == 0 ]; then
		message="200\t$taskid\tLTO with label: $ltolabel added to system and assigned to pool: $poolname"
		result="true"
	else
		message="500\tLTO with label $ltolabel has not been added to system"
		result="false"
	fi
else
	message="400\tLTO with label $ltolabel was already in use by the system"
	result="false"
fi
}
#------------------------------------
function Withdraw
{
#	Passo 1 - Esiste gia' in lto_info?
cercatape $ltolabel
if [ $trovato == 0 ]; then
	message="400\tLTO with label: $ltolabel doesn't appear to belong to this system"
	result="false"
else
	#	Se esiste...  Passo 2 - e' assegnato al quel pool?
	cercainpool	
	if [ $gianelpool = 0 ]; then
		#	messaggio
		message="400\tLTO with label $ltolabel wasn't assigned to pool: $poolname"
		result="false"
	else	# NON elimino se e' in uso
		inuse=`$CMD_DB" select inuse from lto_info where label='$ltolabel';" | sed -e 's/^ *//'`
		if [ -z $inuse ]; then
			#	Elimino record in lto_info
			$CMD_DB" delete from lto_info where label='$ltolabel'" >/dev/null 2>&1
			#	Elimino richieste da requests (solo quelle NON avviate)
			$CMD_DB" delete from requests where ltotape='$ltolabel' and substatus=0" >/dev/null 2>&1
			RC=$?
			if [ $RC == 0 ]; then
				message="200\tLTO with label: $ltolabel has been deleted from pool: $poolname"
				result="true"
			else
				message="400\tLTO with label :$ltolabel not deleted from pool: $poolname"
				result="false"
			fi
		else
			message="400\tLTO with label :$ltolabel is in use and cannot be deleted from pool: $poolname"
			result="false"
		fi
	fi
fi

}
################################################################################
# Script starts here
PARM=$QUERY_STRING
command=$( get_parameter Command )
guicall=$( get_parameter FromGUI )
callingtime=`date '+%Y-%m-%d %H:%M:%S'`

CanAct=$command
message=""
case $command in
	"Add")
		ltolabel=$( get_parameter TapeID )
		if [ -z $ltolabel ]; then
			message="400\tMissing TapeID"
			CanAct="none"
		else 
			#	Label riservata
			if [ $ltolabel == $LTFSARCHIVER_LOCK_LABEL ]; then
				message="400\t\"$ltolabel\" is an invalid TapeID"
				CanAct="none"
			fi
		fi
		poolname=$( get_parameter PoolName )
		[ -z $poolname ] && poolname="default"
		format=$( get_parameter Format )
		[ -z $format ] && format="N"
		$CanAct
	;;
	"Withdraw")
		ltolabel=$( get_parameter TapeID )
		if [ -z $ltolabel ]; then
			message="400\tMissing TapeID"
			CanAct="none"
		fi
		poolname=$( get_parameter PoolName )
		$CanAct
	;;
	"GetStatus"|"GetResult")
                taskid=$( get_parameter TaskID )
                if [ -z $taskid ]; then
                        message="400\tEmpty TaskID"
                else
                        getinfo_common
                fi
	;;
	"Cancel")
                taskid=$( get_parameter TaskID )
                if [ -z $taskid ]; then
                        message="400\tEmpty TaskID"
		else
			#	Elimino da lto_info
			#	label
			LBL=`$CMD_DB "select ltotape from requests where uuid='$taskid';" | tr -d ' '` 
			#	Elimino record in lto_info
			$CMD_DB" delete from lto_info where label='$LBL'" >/dev/null 2>&1
                        cancel_common "('F','C','Z')"
                fi
			
	;;
	*)
		message=$message"400\tMissing or unknown command: $command"
	;;
esac
case $guicall in
	"true")

		echo 'Content-Type: text/html'
		echo 'Pragma: nocache'
		echo 'Cache-Control: no-cache, must-revalidate, no-store'
		echo ''
		echo '<html>'
		echo '<head>'
		echo '<meta content="text/html; charset=iso-8859-1"'
		echo 'http-equiv="Content-Type">'
		echo '<title></title>'
		echo '</head>'
		echo '<body bgcolor="#FFFFCC" link="#000099" vlink="#000099">'
		echo '<font size="2" face="Verdana, Arial, Helvetica, sans-serif">'
		echo '<CENTER>'
		echo '<center><b>Tape manager '$command' command result:</b><br><br>'
		data=( `echo -e "$message" | tr '\t' ' '` )
		for ((STR=1; STR<${#data[@]}; STR++)); do
			RESULT=$RESULT" "${data[$STR]}
		done
		echo 'message code: '${data[0]}'<br>'
		echo 'result: '$RESULT
		echo '</body>'
		echo '</html>'
	;;
	*)
		output_text_common
	;;
esac
