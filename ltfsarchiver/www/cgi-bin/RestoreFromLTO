#!/bin/bash
#  PrestoPRIME  LTFSArchiver
#  Version: 1.3
#  Authors: L. Savio, L. Boch, R. Borgotallo
#
#  Copyritght (C) 2011-2012 RAI â€“ Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

function insert_restore()
{
callingtime=`date '+%Y-%m-%d %H:%M:%S'`

$CMD_DB "INSERT INTO requests ( uuid,status,substatus,manager,operation,sourcefile,destfile,callingtime,ltotape ) \
	VALUES ( '$taskid','waiting',0,'$LTFSARCHIVER_MODE','R','$filesrc','$filedest','$callingtime','`echo \"$filesrc\" | cut -d ":" -f 2`' )" > /dev/null 2>&1
RC=$?
}

# Script starts here
. $CFGFILE
. `dirname $0`/common.sh
command=`basename $0`
PARM=$QUERY_STRING
RECEIVEDTIME=`date +'%Y-%m-%dT%H:%M:%S'`
VALIDPARMS="FileName|DestPath|FromGUI|Output"
output=$( get_parameter Output )
normalize_output
get_supplied_parameters
filesrc=$( get_parameter FileName )
filedest=$( get_parameter DestPath )
format=$( get_parameter Format )
guicall=$( get_parameter FromGUI )
if [ -z $output ]; then
        output=`echo $LTFSARCHIVER_OUTPUT | tr '[A-Z]' ' [a-z]'`
        PARM=$PARM'&Output='$output
fi
[ -z $guicall ] && guicall=false
if ! [ -z "$BADPARMS" ]; then
	exitcode="400"; message="${BADPARMS}"; test_passed=false
else
	test_passed=true
fi
#	Check FileName
if $test_passed ; then
	if  [ -z "$filesrc" ]; then
		exitcode="400";message="Empty FileName supplied "; test_passed=false
	else
		#	sintassi flocat
		FLO_PARTS=( `echo $filesrc | tr ':' ' '` )
		if [ ${#FLO_PARTS[@]} -lt 3 ]; then
			exitcode="400"; message="Invalid flocat syntax"; test_passed=false
		else
			if ! [ ${FLO_PARTS[0]} == "lto-ltfs" ]; then
				exitcode="400"; message="Invalid flocat type"; test_passed=false
			else
				cercatape ${FLO_PARTS[1]}
				if [ $trovato == 0 ]; then
					exitcode="400"; message="Tape referred by flocat (${FLO_PARTS[1]}) not found"; test_passed=false
				fi
			fi
		fi
	fi	
fi
#	Check destPath
if $test_passed ; then
	if  [ -z "$filedest" ]; then
		exitcode="400";message="Empty DestPath supplied "; test_passed=false
	else
		if [ `echo "$filedest" | cut -b 1` != "/" ] ; then
			exitcode="400";message="Invalid DestPath \"$filedest\" supplied (it must be in absolute form)"; test_passed=false
		fi
	fi
fi
if $test_passed; then
	#       la directory di arrivo deve esistere
	basedest=`dirname "$filedest" | sed -e 's/.*\://'`
	if [ -d $basedest ]; then
		#       ma non deve esistere l'oggetto destinatario
		if ( [ -d "$filedest" ] || [ -e "$filedest" ] || [ -f "$filedest" ] ); then
			exitcode="400"; message="Destination path/file \"$filedest\" already exists"; test_passed=false
		fi
	else
		exitcode="400";	message="Destination upper level path \"$basedest\" doesn't exist"; test_passed=false
	fi
fi
if $test_passed; then
	taskid=`uuidgen`
	#       Insert DB
	insert_restore
	if [ $RC == 0 ]; then
		exitcode="200"
		crea_xml_output
	else
		unset taskid
		message="500"; message="error occurred while inserting request"
	fi
fi
crea_xml_answer
send_output
