#!/bin/bash

#  PrestoPRIME  LTFSArchiver
#  Version: 1.3
#  Authors: L. Savio, L. Boch, R. Borgotallo
#
#  Copyritght (C) 2011-2012 RAI â€“ Radiotelevisione Italiana <cr_segreteria@rai.it>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

TMP_HOME=`dirname $0`
. $TMP_HOME/../conf/ltfsarchiver.conf
#	Start ltfsarchiver.sh
function Lavora()
{
#	Redirect stderr to null or to a file according to DEBUG flag
if [ $LTFSARCHIVER_DEBUG == 0 ]; then
	LTFSARCHIVER_LOG_DEBUG=/dev/null
else
	LTFSARCHIVER_LOG_DEBUG=$LTFSARCHIVER_HOME/logs/ltfsarchiver.`date +%Y%m%d`.err
fi
$LTFSARCHIVER_HOME/sbin/ltfsarchiver.sh 2>>$LTFSARCHIVER_LOG_DEBUG
}

#	MAIN LOOP
function Gira_E_Aspetta()
{
while [ 1 == 1 ]; do
	#	Verify if another instace is running
	#		if lock file doesn't exists
	if ! [ -f /tmp/ltfsarchiver.lock ]; then
		#	start
		Lavora
	else
		#	if exixts ther SHOULD be a running task
		RUNNING=($( pidof -x ltfsarchiver.sh ))
		#	If no running task is found, removes lock, otherwise exits
		[ ${#RUNNING[@]} = 0 ] && {
			rm -f /tmp/ltfsarchiver.lock
			echo `date`": lock removed by wrapper" >>$LTFSARCHIVER_HOME/logs/ltfsarchiver.err
		}
	fi
	sleep $IDLETTIME
done
}
#	check postgresql
service postgresql status >/dev/null 2>&1
PSQL_RUN=$?
if [ $PSQL_RUN -gt 0 ]; then
	echo "missing postgresql instance... exiting"
	exit 3
fi

#	let's check if I'm already running
ChiSono=`basename $0`
sleep 2
Processi=($( pidof -o %PPID -x $ChiSono ))
#	Not more than one copy is allowed
if [ ${#Processi[@]} -gt 1 ]; then
	exit 4
fi
#	Timeout (default 20 seconds)
if [ -z $LTFSARCHIVER_INTERRUN ]; then
	IDLETTIME=60
else
	IDLETTIME=$LTFSARCHIVER_INTERRUN
fi
Gira_E_Aspetta
